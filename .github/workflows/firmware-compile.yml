name: Firmwire-CI

on:
  schedule:
    - cron: 30 22 * * *
  workflow_dispatch:
    
  release:
    types: [published]

jobs:

  build_firmware:

    name: Build Firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    
      - name: Fix up git URLs
        run: |
         git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
         git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"
        

          
      - name: Generate artifact Path
        run: |
          mkdir ./artifact
          sudo chmod 777 ./artifact
          cd ./artifact
          echo ${PWD}
          
      - name: Path Init
        run: |
          cd ./artifact
          
          if [ ! -d "bootloader" ];then
            mkdir bootloader
          fi

          if [ ! -d "kernelfile" ];then
            mkdir kernelfile
          fi

          if [ ! -d "rootfs" ];then
            mkdir rootfs
          fi
          
          ls -l
          
      - name: U-Boot Compile
        run: |
          wget -c https://releases.linaro.org/components/toolchain/binaries/6.5-2018.12/arm-linux-gnueabihf/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
          tar -xf gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
          export CC=`pwd`/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
          ${CC}gcc --version

          export ARCH=arm CROSS_COMPILE=${CC}

          git clone -b v2022.04-rc1 https://github.com/u-boot/u-boot/ --depth=1
          cd u-boot


          make distclean
          make stm32mp15_basic_defconfig
          make DEVICE_TREE=stm32mp157a-dk1 all -j $(nproc)

      - name: Copy U-Boot files
        run: |
          cp ./u-boot-spl.stm32 ./artifact/bootloader/u-boot-spl.stm32
          cp ./u-boot.img ./artifact/bootloader/u-boot.img

          cd ..
          rm -rf ./u-boot

      - name: Kernel Compile
        run: |
          export TERM=xterm
          git clone https://github.com/RobertCNelson/armv7-lpae-multiplatform
          cd armv7-lpae-multiplatform/
          git checkout origin/v5.16.x -b tmp
          sed -i '200,229s/make_menuconfig/echo \"CONFIGURE DONE!\"\n/' ./build_kernel.sh
          ./build_kernel.sh

          kernel_version=$(cat "$PWD/KERNEL/include/generated/utsrelease.h" | awk '{print $3}' | sed 's/\"//g' )
          
      - name: Copy Kernel Files
        run: |
          sudo cp ./deploy/${kernel_version}.zImage ./artifact/kernelfile/${kernel_version}.zImage
          sudo cp ./deploy/${kernel_version}-dtbs.tar.gz ./artifact/kernelfile/${kernel_version}-dtbs.tar.gz
          sudo cp ./deploy/${kernel_version}-modules.tar.gz ./artifact/kernelfile/${kernel_version}-modules.tar.gz

          cd ..
          rm -rf ./armv7-lpae-multiplatform

      - name: rootfs(Ubuntu-minimal) Preparation
        run: |
          cd ./artifact/rootfs
          wget -c https://rcn-ee.com/rootfs/eewiki/minfs/ubuntu-20.04.3-minimal-armhf-2021-12-20.tar.xz
          tar xf ubuntu-20.04.3-minimal-armhf-2021-12-20.tar.xz
          cd ..
          cd ..

      - name: Deliver U-Boot
        uses: actions/upload-artifact@v2
        with:
          name: STM32MP157_bootloader
          path: ./artifact/bootloader/

      - name: Deliver Kernel
        uses: actions/upload-artifact@v2
        with:
          name: STM32MP157_kernel
          path: ./artifact/kernelfile/

      - name: Deliver rootfs
        uses: actions/upload-artifact@v2
        with:
          name: STM32MP157_rootfs
          path: ./artifact/rootfs/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/*
          tag: ${{ github.ref }}
          file_glob: true
