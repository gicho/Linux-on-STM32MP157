name: Firmwire-CI

on:
  schedule:
    - cron: 0 12 * * *
  release:
    types: [published]

jobs:

  build_firmware:

    name: Build Firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    
      - name: Fix up git URLs
        run: |
         git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
         git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"
        
      - name: Container Init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -fy install build-essential bison flex swig binutils bzip2 gawk git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion uglifyjs p7zip p7zip-full msmtp libssl-dev libglib2.0-dev libelf-dev autoconf automake libtool autopoint device-tree-compiler lzop lzma libmpc-dev u-boot-tools libncurses5-dev antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          
      - name: Path Clean
        run: |
          if [ -f "u-boot" ];then
            rm -rf ./u-boot/*
          fi

          if [ -f "armv7-lpae-multiplatform" ];then
            rm -rf ./armv7-lpae-multiplatform/*
          fi

          if [ -f "bootloader" ];then
            rm -rf ./bootloader/*
          fi

          if [ -f "kernelfile" ];then
            rm -rf ./kernelfile/*
          fi

          if [ -f "rootfs" ];then
            rm -rf ./rootfs/*
          fi
          
      - name: Path Init
        run: |
          if [ ! -d "bootloader" ];then
            mkdir bootloader
          fi

          if [ ! -d "kernelfile" ];then
            mkdir kernelfile
          fi

          if [ ! -d "rootfs" ];then
            mkdir rootfs
          fi
          
      - name: U-Boot Compile
        run: |
          wget -c https://releases.linaro.org/components/toolchain/binaries/6.5-2018.12/arm-linux-gnueabihf/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
          tar -xf gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
          export CC=`pwd`/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
          ${CC}gcc --version

          export ARCH=arm CROSS_COMPILE=${CC}

          git clone -b v2022.04-rc1 https://github.com/u-boot/u-boot/ --depth=1
          cd u-boot


          make distclean
          make stm32mp15_basic_defconfig
          make DEVICE_TREE=stm32mp157a-dk1 all -j $(nproc)


          cp ./u-boot-spl.stm32 ../bootloader/u-boot-spl.stm32
          cp ./u-boot.img ../bootloader/u-boot.img

          cd ..
          rm -rf u-boot

      - name: Kernel Compile
        run: |
          git clone https://github.com/RobertCNelson/armv7-lpae-multiplatform
          cd armv7-lpae-multiplatform/
          git checkout origin/v5.16.x -b tmp
          sed -i '271,286s/make_menuconfig//' ./build_kernel.sh
          ./build_kernel.sh

          kernel_version=$(cat "$PWD/KERNEL/include/generated/utsrelease.h" | awk '{print $3}' | sed 's/\"//g' )

          sudo cp ./deploy/${kernel_version}.zImage ../kernelfile/${kernel_version}.zImage
          sudo cp ./deploy/${kernel_version}-dtbs.tar.gz ../kernelfile/${kernel_version}-dtbs.tar.gz
          sudo cp ./deploy/${kernel_version}-modules.tar.gz ../kernelfile/${kernel_version}-modules.tar.gz

          cd ..
          rm -rf armv7-lpae-multiplatform

      - name: rootfs(Ubuntu-minimal) Download
        run: |
          cd rootfs
          wget -c https://rcn-ee.com/rootfs/eewiki/minfs/ubuntu-20.04.3-minimal-armhf-2021-12-20.tar.xz

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
